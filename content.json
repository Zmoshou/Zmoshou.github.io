{"meta":{"title":"Moshou","subtitle":null,"description":null,"author":"Moshou","url":"http://yoursite.com"},"pages":[{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"bangumi/index.html","permalink":"http://yoursite.com/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-10-15T00:10:32.000Z","comments":true,"path":"comment/index.html","permalink":"http://yoursite.com/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"client/index.html","permalink":"http://yoursite.com/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"lab/index.html","permalink":"http://yoursite.com/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"music/index.html","permalink":"http://yoursite.com/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"donate/index.html","permalink":"http://yoursite.com/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-10-15T00:10:32.000Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-10-15T00:10:32.000Z","comments":true,"path":"rss/index.html","permalink":"http://yoursite.com/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-10-15T00:10:32.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://yoursite.com/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-10-15T00:10:32.000Z","comments":false,"path":"video/index.html","permalink":"http://yoursite.com/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"CSS3动画","slug":"CSS3动画","date":"2019-01-03T12:12:21.000Z","updated":"2020-01-23T08:55:13.795Z","comments":true,"path":"2019/01/03/CSS3动画/","link":"","permalink":"http://yoursite.com/2019/01/03/CSS3动画/","excerpt":"","text":"CSS3动画通过 CSS3，我们能够创建动画，这可以在许多网页中取代动画图片、Flash 动画以及 JavaScript。 ###1.CSS3的@keyframes 规则 @keyframes 规则用于创建动画。在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。 @keyframes 中创建动画时，请把它捆绑到某个选择器，否则不会产生动画效果。通过规定至少以下两项 CSS3 动画属性，即可将动画绑定到选择器： 规定动画的名称 规定动画的时长 2.CSS3 中动画的使用动画是使元素从一种样式逐渐变化为另一种样式的效果。 您可以改变任意多的样式任意多的次数。 请用百分比来规定变化发生的时间，或用关键词 “from” 和 “to”，等同于 0% 和 100%。 0% 是动画的开始，100% 是动画的完成。 为了得到最佳的浏览器支持，您应该始终定义 0% 和 100% 选择器。 动画是使元素从一种样式逐渐变化为另一种样式的效果。 您可以改变任意多的样式任意多的次数。 请用百分比来规定变化发生的时间，或用关键词 “from” 和 “to”，等同于 0% 和 100%。 0% 是动画的开始，100% 是动画的完成。 为了得到最佳的浏览器支持，您应该始终定义 0% 和 100% 选择器。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt; div&#123;width:100px;height:100px;background:red;animation:myfirst 5s;-moz-animation:myfirst 5s; /* Firefox */-webkit-animation:myfirst 5s; /* Safari and Chrome */-o-animation:myfirst 5s; /* Opera */&#125;@keyframes myfirst&#123;from &#123;background:red;&#125;to &#123;background:yellow;&#125;&#125;@-moz-keyframes myfirst /* Firefox */&#123;from &#123;background:red;&#125;to &#123;background:yellow;&#125;&#125;@-webkit-keyframes myfirst /* Safari and Chrome */&#123;from &#123;background:red;&#125;to &#123;background:yellow;&#125;&#125;@-o-keyframes myfirst /* Opera */&#123;from &#123;background:red;&#125;to &#123;background:yellow;&#125;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;注释：&lt;/b&gt;本例在 Internet Explorer 中无效。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 3.CSS3 动画属性 animation (所有动画属性的简写属性，除了 animation-play-state 属性) 12animation: name duration timing-function delay iteration-count direction;animation: demo 3s liner 0.2 iteration-count direction; animation-name(为 @keyframes 动画指定名称) 1animation-name: keyframename|none; animation-duration(定义动画完成一个周期需要多少秒或毫秒) 1animation-duration: time; animation-timing-function(指定动画将如何完成一个周期） 12345678animation-timing-function: value;linear 动画从头到尾的速度是相同的。ease 默认。动画以低速开始，然后加快，在结束前变慢。ease-in 动画以低速开始。ease-out 动画以低速结束。 ease-in-out 动画以低速开始和结束。 cubic-bezier(n,n,n,n) 在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。 animation-delay (定义动画什么时候开始) 1animation-delay: time; animation-iteration-count(定义动画应该播放多少次) 1234animation-iteration-count: value;n 一个数字，定义应该播放多少次动画infinite 指定动画应该播放无限次（永远） animation-direction (定义是否循环交替反向播放动画) 12345678animation-direction: normal|reverse|alternate|alternate-reverse|initial|inherit;normal 默认值。动画按正常播放。 reverse 动画反向播放。 alternate 动画在奇数次（1、3、5...）正向播放，在偶数次（2、4、6...）反向播放。alternate-reverse 动画在奇数次（1、3、5...）反向播放，在偶数次（2、4、6...）正向播放。initial 设置该属性为它的默认值。 inherit 从父元素继承该属性。 animation–play-state(指定动画是否正在运行或已暂停) 1234animation-play-state: paused|running;paused 指定暂停动画 running 指定正在运行的动画 ​","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}],"tags":[{"name":"css3","slug":"css3","permalink":"http://yoursite.com/tags/css3/"},{"name":"动画","slug":"动画","permalink":"http://yoursite.com/tags/动画/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}]},{"title":"前端兼容性问题小结","slug":"前端兼容性问题小结","date":"2018-12-21T12:45:30.000Z","updated":"2020-01-23T07:19:12.341Z","comments":true,"path":"2018/12/21/前端兼容性问题小结/","link":"","permalink":"http://yoursite.com/2018/12/21/前端兼容性问题小结/","excerpt":"","text":"前端兼容性问题小结1.不同浏览器的标签默认的外补丁和内补丁不同问题症状：随便写几个标签，不加样式控制的情况下，各自的margin 和padding差异较大。 碰到频率:100% 解决方案：CSS里 *{margin:0;padding:0;}，或使用第三方css文件重置。 备注：这个是最常见的也是最易解决的一个浏览器兼容性问题，几乎所有的CSS文件开头都会用通配符*来设置各个标签的内外补丁是0。 2.图片默认有间距问题症状：几个img标签放在一起的时候，有些浏览器会有默认的间距，加了问题一中提到的通配符也不起作用。 碰到几率：20% 解决方案：使用float属性为img布局 备注：因为img标签是行内属性标签，所以只要不超出容器宽度，img标签都会排在一行里，但是部分浏览器的img标签之间会有个间距。去掉这个间距使用float是正道。（我的一个学生使用负margin，虽然能解决，但负margin本身就是容易引起浏览器兼容问题的用法，所以我禁止他们使用） ###3.IE9一下浏览器不能使用opacity 解决方案： 123opacity: 0.5;filter:alpha(opacity = 50);filter: progid:DXImageTransform.Microsoft.Alpha(style = 0, opacity = 50); 4.IE6 背景闪烁的问题问题：链接、按钮用 CSSsprites 作为背景，在 ie6 下会有背景图闪烁的现象。原因是 IE6 没有将背景图缓存，每次触发 hover 的时候都会重新加载 解决：可以用 JavaScript 设置 ie6 缓存这些图片： 1document.execCommand(&quot;BackgroundImageCache&quot;, false, true); 5.键盘事件 keyCode 兼容性写法1234567891011var inp = document.getElementById(&apos;inp&apos;)var result = document.getElementById(&apos;result&apos;)function getKeyCode(e) &#123; e = e ? e : (window.event ? window.event : &quot;&quot;) return e.keyCode ? e.keyCode : e.which&#125;inp.onkeypress = function(e) &#123; result.innerHTML = getKeyCode(e)&#125; 6.DOM 事件处理程序的兼容写法1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465var eventshiv = &#123; // event兼容 getEvent: function(event) &#123; return event ? event : window.event; &#125;,// &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;兼容getType: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(event) &#123; &lt;span class=&quot;hljs-built_in&quot;&gt;return&lt;/span&gt; event.type;&#125;,// target兼容getTarget: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(event) &#123; &lt;span class=&quot;hljs-built_in&quot;&gt;return&lt;/span&gt; event.target ? event.target : event.srcelem;&#125;,// 添加事件句柄addHandler: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(elem, &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, listener) &#123; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (elem.addEventListener) &#123; elem.addEventListener(&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, listener, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;); &#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (elem.attachEvent) &#123; elem.attachEvent(&lt;span class=&quot;hljs-string&quot;&gt;&apos;on&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, listener); &#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &#123; // 在这里由于.与&lt;span class=&quot;hljs-string&quot;&gt;&apos;on&apos;&lt;/span&gt;字符串不能链接，只能用 [] elem[&lt;span class=&quot;hljs-string&quot;&gt;&apos;on&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;] = listener; &#125;&#125;,// 移除事件句柄removeHandler: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(elem, &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, listener) &#123; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (elem.removeEventListener) &#123; elem.removeEventListener(&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, listener, &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;); &#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (elem.detachEvent) &#123; elem.detachEvent(&lt;span class=&quot;hljs-string&quot;&gt;&apos;on&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, listener); &#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &#123; elem[&lt;span class=&quot;hljs-string&quot;&gt;&apos;on&apos;&lt;/span&gt; + &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;] = null; &#125;&#125;,// 添加事件代理addAgent: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (elem, &lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, agent, listener) &#123; elem.addEventListener(&lt;span class=&quot;hljs-built_in&quot;&gt;type&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (e) &#123; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (e.target.matches(agent)) &#123; listener.call(e.target, e); // this 指向 e.target &#125; &#125;);&#125;,// 取消默认行为preventDefault: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(event) &#123; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (event.preventDefault) &#123; event.preventDefault(); &#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &#123; event.returnValue = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;; &#125;&#125;,// 阻止事件冒泡stopPropagation: &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(event) &#123; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (event.stopPropagation) &#123; event.stopPropagation(); &#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &#123; event.cancelBubble = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;; &#125;&#125;;","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"},{"name":"兼容性","slug":"兼容性","permalink":"http://yoursite.com/tags/兼容性/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}]},{"title":"css知识点小结(2)","slug":"css知识点小结-2","date":"2018-12-13T12:42:33.000Z","updated":"2020-01-23T06:01:48.860Z","comments":true,"path":"2018/12/13/css知识点小结-2/","link":"","permalink":"http://yoursite.com/2018/12/13/css知识点小结-2/","excerpt":"","text":"css知识点小结(2)1.文本超出部分显示省略号单行 123overflow:hidden；text-overflow:ellipsis;white-space:nowarp; 多行 1234display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp: 3; // 最多显示几行overflow: hidden; ###2.优雅降级和渐进增强 优雅降级： Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。 渐进增强： 从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。 如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验； 3.transition和animation的区别 transition是过渡动画，animation是帧动画。 transition只能从一种状态过渡到另外一种状态，animation可以定制复杂动画(多个帧)，可以定义动画的区间等。 transition必须通过一些行为才能触发（js或者伪类来触发），animation的话直接就可以触发。 4.margin-left:calc(-100%-100px) 代码中calc（）作用 通过计算来确定CSS属性值。 calc是英文单词calculate(计算)的缩写，是css3的一个新增的功能，你可以使用calc()给元素的border、margin、pading、font-size和width等属性设置动态值。calc()可以使用数学运算中的简单加（+）、减（-）、乘（）和除（/）来解决问题，而且还可以根据单位如px,em,rem和百分比来转化计算 5. Sass、Less的区别？CSS 预处理，他们是动态的样式语言。他们规定了一种特殊的语法并且内置了编译器，可以将less/sass写的代码通过编译器编译成 CSS。 1234Less和Sass的区别：1.变量符不一样，less 是@，而 Sass 是$;2.Sass支持条件语句，可以使用 if&#123;&#125;else&#123;&#125;,for&#123;&#125;循环等等。而 Less 不支持;3.Sass是基于Ruby，需要在服务端处理的；而Less是在客户端处理，需要引入less.js","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}]},{"title":"css知识点小结(1)","slug":"css知识点小结-1","date":"2018-12-02T11:30:10.000Z","updated":"2020-01-21T14:23:45.455Z","comments":true,"path":"2018/12/02/css知识点小结-1/","link":"","permalink":"http://yoursite.com/2018/12/02/css知识点小结-1/","excerpt":"","text":"css知识点小结(1)1.css选择器优先级选择器的特殊性值表述为4个部分，用0,0,0,0表示，权重计算规则如下： 行间样式 1,0,0,0 ID选择器 0,1,0,0 类选择器、属性选择器或伪类 0,0,1,0 元素和伪元素 0,0,0,1 最后比较特殊的一个标志!important（权重），它没有特殊性值，但它的优先级是最高的 2块格式化上下文（Block Formatting Context）及其工作原理块格式上下文（BFC）是它是一个独立的渲染区域，容器里面的子元素不会影响到外面的元素。 BFC特性 在BFC中，盒子从顶端开始垂直地一个接一个地排列。 盒子垂直方向的距离由margin决定。属于同一个BFC的两个相邻盒子的margin会发生重叠。 在BFC中，每一个盒子的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）。 BFC的区域不会与浮动盒子产生交集，而是紧贴浮动边缘。 计算BFC的高度时，自然也会检测浮动或者定位的盒子高度。 如何触发BFC float的值不是none. position的值不是static或relative. display的值是table-cell、table-caption、inline-block、flex、或inline-flex。 overflow的值不是visible。 3.如何清除浮动 空div方法，在父盒子最后加一个空盒子并且加上clear:both&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt; 伪元素法，使用伪元素定义一个clearfix的样式类，然后使用&lt;div class=&quot;clearfix&quot;&gt; 给父亲设置overflow: auto或overflow: hidden等方法（触发BFC）。 给父元素指定高度。 4.外边距重叠（外边距坍塌）在 CSS 当中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结合成一个单独的外边距。这种合并外边距的方式被称为折叠，并且因而所结合成的外边距称为折叠外边距。 折叠结果遵循下列计算规则： 两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。 两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。 两个外边距一正一负时，折叠结果是两者的相加的和。 5.伪元素及其使用伪元素指的是两个冒号的选择器 div::before div::after p::first-letter 伪元素的用途： 1.用after清除浮动 123456789101112&lt;div class=\"clear-fix\"&gt; &lt;div&gt; &lt;/div&gt;&lt;/div&gt;&lt;style&gt; clear-fix::after &#123; clear: both; content: \"\"; display: block; height: 0; overflow: hidden &#125;&lt;/style&gt; 利用伪类实现简单图标 元素 hover 特效 6.flex布局中的属性在容器上可以设置6个属性： flex-direction 主轴方向 flex-wrap 主轴超出范围是否换行 flex-flow flex-direction和flex-wrap的复合属性 justify-content 元素在主轴的对齐方式 align-items 元素在侧轴的对齐方式 align-content 元素在侧轴的对齐方式（多行） 注意：当设置 flex 布局之后，子元素的 float、clear、vertical-align 的属性将会失效。 Flex 有六种属性可运用在 item 项目上: order flex-item的排序 flex-basis flex-item的宽度 flex-grow flex-item占据剩余空间的比例 flex-shrink flex-item占据收缩空间的比例 flex flex-grow\\flex-shrink\\flex-basis的复合属性 align-self 规定flex-item自己的对齐方式 7.行内元素、块级元素行内元素：在一行显示，不可以设置宽高。代表 span a input select strong 块级元素：换行显示，可以设置宽高。代表 div dl dd dt form p table tr th td 行内块级元素：在一行显示，可以设置宽高。代表 img input 8.水平垂直居中的方式 flex布局 123display: flex;justify-content: center;align-items: center; position定位 12345678910// 父容器position: relative;// 子容器position:absolute;margin:auto;top:0;bottom:0;left:0;right:0; position+transform 12345678// 父容器position: relative;// 子容器position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%); position+margin 123456789101112// 父容器position: relative;// 子容器height: 50px;background-color: #21252b;position: absolute;margin: auto;top: 50%;left: 50%;margin-left: -25px;margin-top: -25px; 9.CSS中link和@import的区别 link属于HTML标签，而@import是CSS提供的 页面加载时，link会同时被加载，而@import引用的CSS会等到页面加载完毕后再加载 import只在IE5以上被识别，存在兼容性问题，link无兼容性问题 link方式的样式的权重高于@import的权重 10.CSS的常用选择器1.id选择器（#box）2.类选择器（.box）3.标签选择器（div）4.相邻选择器（h1+p）5.子选择器（ul&gt;li）6.后代选择器（li a）7.通配符选择器（*）8.属性选择器（a[attr=”d1”]）9.伪类选择器（a:hover, li:nth-child）","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"},{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}]},{"title":"html知识点小结","slug":"html知识点总结","date":"2018-11-25T12:15:50.000Z","updated":"2020-01-21T11:38:17.418Z","comments":true,"path":"2018/11/25/html知识点总结/","link":"","permalink":"http://yoursite.com/2018/11/25/html知识点总结/","excerpt":"","text":"html知识点小结##1.语义化标签简单的来说就是用正确的标签做正确的事情。 优点： 见名知意，可读性好，方便代码的开发和维护。 有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重。 方便其他设备解析，如盲人阅读器根据语义渲染网页 2. CSS 的&lt;link&gt;标签放在&lt;head&gt;&lt;/head&gt;之间？ JS 的&lt;script&gt;标签放在&lt;/body&gt;之前 把&lt;link&gt;放在 &lt;head&gt;中 这种做法可以让页面逐步呈现，提高了用户体验。如果将样式表放在文档底部附近，会使许多浏览器（包括 Internet Explorer）不能逐步呈现页面。并且link会阻止页面渲染但是不会组织页面的加载。 把&lt;script&gt;标签恰好放在&lt;/body&gt;之前 脚本在下载和执行期间会阻止 HTML 解析。把&lt;script&gt;标签放在底部，保证 HTML 首先完成解析，将页面尽早呈现给用户。 3.Reflow和Repaint（重绘和重排） Reflow：当涉及到DOM节点的布局属性发生变化时，就会重新计算该属性，浏览器会重新描绘相应的元素，此过程叫Reflow（回流或重排）。 Repaint：当影响DOM元素可见性的属性发生变化 (如 color) 时, 浏览器会重新描绘相应的元素, 此过程称为Repaint（重绘）。因此重排必然会引起重绘。 1- 调整窗口大小2- 字体大小3- 样式表变动4- 元素内容变化，尤其是输入控件5- CSS伪类激活，在用户交互过程中发生6- DOM操作，DOM元素增删、修改7- width, clientWidth, scrollTop等布局宽高的计算 Repaint和Reflow是不可避免的，只能说对性能的影响减到最小，给出下面几条建议：1- 避免逐条更改样式。建议集中修改样式，例如操作className。2- 避免频繁操作DOM。创建一个documentFragment或div，在它上面应用所有DOM操作，最后添加到文档里。设置 display:none的元素上操作，最后显示出来。3- 避免频繁读取元素几何属性（例如scrollTop）。绝对定位具有复杂动画的元素。4- 绝对定位使它脱离文档流，避免引起父元素及后续元素大量的回流 4.href和src区别它们之间的主要区别可以用这样一句话来概括：src用于替代这个元素，而href用于建立这个标签与外部资源之间的关系。 hrefhref标识超文本引用，用在link和a等元素上，href是引用和页面关联，是在当前元素和引用资源之间建立联系若在文档中添加href ，浏览器会识别该文档为 CSS 文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式加载 CSS，而不是使用 @import 方式。 srcsrc表示引用资源，替换当前元素，用在img，script，iframe上，src是页面内容不可缺少的一部分。当浏览器解析到src ，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等也如此，类似于将所指向资源应用到当前内容。这也是为什么建议把 js 脚本放在底部而不是头部的原因。 使用场景 引用css文件时：href=&quot;cssfile.css&quot; 引用js文件时：src=&quot;myscript.js&quot; 引用图片：src=&quot;mypic.jpg&quot; 网站链接：href=&quot;http://www.webpage.com&quot; 5.浏览器的渲染过程 解析HTML生成DOM树。 解析CSS生成CSSOM规则树。 将DOM树与CSSOM规则树合并在一起生成渲染树。 遍历渲染树开始布局，计算每个节点的位置大小信息。 将渲染树每个节点绘制到屏幕。 6.doctype有什么用DOCTYPE是document type的简写，它并不是 HTML 标签，也没有结束标签，它是一种标记语言的文档类型声明，即告诉浏览器当前 HTML 是用什么版本编写的。 1.告知浏览器文档使用哪种 HTML 或 XHTML 规范。 2.告诉浏览器按照何种规范解析页（如果你的页面没有DOCTYPE的声明，那么浏览器会进入Quirks模式） 7.优化图片加载的方法 图片懒加载。 使用icon和精灵图技术。 使用其他服务器单独存放图片。 如果图片过大，可以使用特殊编码的图片（base64编码） 8.常见的浏览器内核有哪些Trident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML] Gecko内核：Netscape6及以上版本，FF,MozillaSuite/SeaMonkey等 Presto内核：Opera7及以上。 [Opera内核原为：Presto，现为：Blink;] Webkit内核：Safari,Chrome等。 [ Chrome的：Blink（WebKit的分支）] 9.SEO中的TDK网页标题(title)：用于告诉用户和搜索引擎当前页面的核心内容，title是搜索引擎根据用户检索关键词进行排名的核心指标，一般标题中含有搜索的关键词才能获得较好的排名; 页面描述(description)：显示在搜索结果中，以百度为例如下图，用于告知用户网站页面的主要内容，作为引导用户点击的索引; 页面关键词(keywords)：告诉搜索引擎当前页面内容的关键词，用户无论在搜索结果还是浏览页面时都看不到页面关键词。","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}],"tags":[{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"},{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/技术/"}]},{"title":"First-Blog","slug":"First-Blog","date":"2018-11-12T11:32:00.000Z","updated":"2020-01-19T15:27:15.732Z","comments":true,"path":"2018/11/12/First-Blog/","link":"","permalink":"http://yoursite.com/2018/11/12/First-Blog/","excerpt":"","text":"个人的第一篇博客今天开启了个人博客，打算记录和分享一些关于生活，学习，以及技术方面的内容，也算是一个简单的记录吧。 个人还是希望把日语继续学下去，工作中英语也很重要，还有各种前端技术，所以不能停滞不前，需要保持高度的学习状态，好好加油吧！","categories":[{"name":"随想","slug":"随想","permalink":"http://yoursite.com/categories/随想/"}],"tags":[{"name":"第一篇博客","slug":"第一篇博客","permalink":"http://yoursite.com/tags/第一篇博客/"}],"keywords":[{"name":"随想","slug":"随想","permalink":"http://yoursite.com/categories/随想/"}]}]}